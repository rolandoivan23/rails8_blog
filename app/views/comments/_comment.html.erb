
<div id="<%= dom_id(comment)%>" class="comment">
        <% if comment.post.user.avatar.attached? %>
            <%= image_tag comment.post.user.avatar, class: "comment-avatar" %>
        <% else %>
            <img class="comment-avatar" src="https://www.claudeusercontent.com/api/placeholder/50/50" alt="User">
        <% end %>
        <div class="comment-body">
            <div class="comment-header">
                <h4 class="comment-author"><%= comment.post.user.email_address %></h4>
                <span class="comment-time"> <%= time_tag comment.updated_at, "data-local": "time-ago" %></span>
            </div>
            <p class="comment-text"><%= comment.content %></p>
            <div class="comment-actions">
                <script>
                    async function updateLikes(commentId,postId) {
                        const commentElementId = `comment_${commentId}_likes`;
                        const commentElement = document.getElementById(commentElementId);
                        if (commentElement) {
                            let currentLikes = commentElement.innerHTML;
                            currentLikes = currentLikes.replace('(', '');
                            currentLikes = currentLikes.replace(')', '');
            
                            const newLikes = parseInt(currentLikes) + 1;
                            commentElement.innerHTML = `(${newLikes})`;

                            const url = `/posts/${postId}/comments/${commentId}.json`;
                        try {
                            var token = document.querySelector('meta[name="csrf-token"]').content

                            const response = await fetch(url, {
                                method: "PATCH",
                                body:JSON.stringify({comment: {likes: newLikes}}),
                                headers: {
                                    'X-CSRF-Token': token,
                                    'Content-Type': 'application/json',  // Important! Tell Rails to parse as JSON
                                    'Accept': 'application/json'
                                }
                            });
                            if (!response.ok) {
                                alert('Hubo un error con el servidor')
                            throw new Error(`Response status is: ${response.status}`);
                            }

                            const json = await response;
                            console.log(json)
                            
                           
                            
                        } catch (error) {
                            console.error(error.message);
                        }

                        } else {
                            console.error(`No se encontr√≥ el elemento con ID: ${commentElementId}`);
                        }
                    }

                    async function destroyComment(commentId,postId) {
                       
                        const url = `/posts/${postId}/comments/${commentId}.json`;
                        try {
                            var token = document.querySelector('meta[name="csrf-token"]').content

                            const response = await fetch(url, {
                                method: "DELETE",
                                headers: {
                                    'X-CSRF-Token': token,
                                    'Content-Type': 'application/json',  // Important! Tell Rails to parse as JSON
                                    'Accept': 'application/json'
                                }
                            });
                            if (!response.ok) {
                                alert('Hubo un error con el servidor')
                            throw new Error(`Response status is: ${response.status}`);
                            }

                            const json = await response;
                            console.log(json)
                           const commentElement = document.getElementById(`comment_${commentId}`);
                           commentElement.remove();
                           const commentsCount = document.getElementById(`post_${postId}_comments_count`);
                           commentsCount.innerHTML = parseInt(commentsCount.innerHTML) - 1; 
                            
                        } catch (error) {
                            console.error(error.message);
                        }

                       
                    }
                </script>
                <span class="comment-action" onclick="updateLikes(<%= comment.id%>, <%= comment.post.id %>)">
                    Like <span id="<%= dom_id(comment) %>_likes">(<%= comment.likes %>)</span>
                </span>
                <span class="comment-action">Reply</span>
                <span class="comment-action">Share</span>
                <span class="comment-action" onClick="destroyComment(<%= comment.id%>, <%= comment.post.id %>)">Delete</span>
            </div>
            
            <!-- Nested Comments >
            <div class="comment-responses">
                <div class="nested-comment">
                    <img class="nested-avatar" src="/api/placeholder/35/35" alt="User">
                    <div class="comment-body">
                        <div class="comment-header">
                            <h4 class="comment-author">Jane Smith</h4>
                            <span class="comment-time">1 hour ago</span>
                        </div>
                        <p class="comment-text">Thanks Alex! I'm glad you found it helpful. Which aspects are you implementing in your projects?</p>
                        <div class="comment-actions">
                            <span class="comment-action">Like (3)</span>
                            <span class="comment-action">Reply</span>
                        </div>
                    </div>
                </div>
                <div class="nested-comment">
                    <img class="nested-avatar" src="/api/placeholder/35/35" alt="User">
                    <div class="comment-body">
                        <div class="comment-header">
                            <h4 class="comment-author">Alex Johnson</h4>
                            <span class="comment-time">45 min ago</span>
                        </div>
                        <p class="comment-text">I'm working on a portfolio site and trying to incorporate those gradient borders with subtle animations you mentioned. Really makes the UI feel more alive!</p>
                        <div class="comment-actions">
                            <span class="comment-action">Like (2)</span>
                            <span class="comment-action">Reply</span>
                        </div>
                    </div>
                </div>
            </div>
            <!-->
        </div>
    </div>